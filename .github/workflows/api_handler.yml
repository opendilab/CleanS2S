name: ASR_TTS_LLM_HANDLER

on: [push]

jobs:
  build-linux-env:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive  

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-variant: Miniforge3
        python-version: "3.10"

    - name: Add Conda to system path
      run: |
        echo $CONDA/bin >> $GITHUB_PATH

    - name: Create Conda environment 
      shell: bash -l {0}
      run: |
        conda create -n cosyvoice -y python=3.10
        pip install -r backend/requirements.txt

    - name: Install CosyVoice dependencies
      shell: bash -l {0}
      run: |
        conda activate cosyvoice
        git clone --recursive https://github.com/FunAudioLLM/CosyVoice.git
        cd CosyVoice
        git submodule update --init --recursive
        conda install -y -c conda-forge pynini==2.1.5
        pip install -r backend/requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host=mirrors.aliyun.com
        cd ..

    - name: Install sox (Ubuntu)
      run: sudo apt-get install -y sox libsox-dev

    - name: Lint with flake8
      shell: bash -l {0}
      run: |
        conda activate cosyvoice
        conda install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      shell: bash -l {0}
      run: |
        conda activate cosyvoice
        pip install pytest
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        export API_KEY='sk-ewsxuwbxlemurrxgemwajzekyxjcwaxtjdrticixzabwvokh'
        pytest backend/tests/test_siliconflow_asr.py
